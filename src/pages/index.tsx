import Head from "next/head";
import { useEffect, useState, type FormEvent } from "react";
import { Input, Task } from "~/components";
import { type ITask } from "~/components/Task";
import { store, useHydratedStore } from "~/store";

export default function Home(props) {
  const {updateTaskList} = store((state) => state)
  const taskList = useHydratedStore('taskList')

  const [newTask, setNewTask] = useState<ITask>({
    taskName: '',
    isCompleted: false,
    taskId: 0,
    children: []
  })

  useEffect(() => {
    document.body.className = "bg-charcoal-700";
  });

  const handleTaskChange = (name: string) => {
    setNewTask({...newTask, taskName: name})
  }

  const handleSubmit = (ev: FormEvent<HTMLFormElement>) => {
    ev.preventDefault();
    const newId = taskList.length + 1
    updateTaskList([...taskList, {...newTask, taskId: newId}])
    setNewTask({...newTask, taskName: ''})
  }

  const handleTaskCompletion = (taskId: number) => {
    const task = taskList.find((task) => task.taskId === taskId)
    if(!task) return taskList;

    const taskIndex = taskList.indexOf(task)
    const newTaskList: ITask[] = taskList;
    newTaskList.splice(taskIndex, 1)
    const taskStatus = !task.isCompleted
    newTaskList.push({...task, isCompleted: taskStatus})
    updateTaskList(newTaskList)
  }

  const handleChildrenAppend = (childrenId: number, parentId: number) => {
    const task = taskList.find((task) => task.taskId === parentId)
    if(!task) throw Error("Parent not found")
    const childrenTask = taskList.find((task) => task.taskId === childrenId)
    task.children = [...task.children, childrenTask]

    const taskIndex = taskList.indexOf(task)
    const newTaskList: ITask[] = taskList;
    newTaskList[taskIndex] = task;

    updateTaskList(newTaskList)
  }

  return (
    <>
      <Head>
        <title>Endless Todos</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="content flex min-h-screen flex-col">
        <div className="bg-charcoal-800 p-5 text-center">
          <h1 className="text-2xl font-bold tracking-wide text-white">
            Endless Todos
          </h1>
        </div>
        <main className="mx-auto max-w-md justify-center pt-32 text-white">
          <form onSubmit={(ev) => handleSubmit(ev)}>
            <Input value={newTask.taskName} onChange={handleTaskChange} />
          </form>
          <div className="flex flex-col gap-2 py-2">
            {taskList.map((task, index) => (
              <Task key={index} {...task} onClick={handleTaskCompletion}/>
            ))}
          </div>
        </main>
      </div>
    </>
  );
}
